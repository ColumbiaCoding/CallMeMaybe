import InsertableStreamHelper from './InsertableStreamHelper';
import { MediaProcessorConnectorInterface } from './MediaProcessorConnectorInterface';
import { MediaProcessorInterface } from './MediaProcessorInterface';
/**
 * Helper class implementing the media Media Processor Connector Interface.
 * This class should always be created on the application main thread and it should be used by Vonage SDKs.
 * An example can be found [here](/docs/intro.md#using-the-transformer-on-main-process).
 */
declare class MediaProcessorConnector implements MediaProcessorConnectorInterface {
    /**
     * @private
     */
    insertableStreamHelper_: InsertableStreamHelper;
    /**
     * @private
     */
    mediaProcessor_: MediaProcessorInterface;
    /**
     * - When running insertable streams on the main `MediaProcessorInterface` should be instance of `MediaProcessor` class.
     * - When running insertable streams on WebWorker `MediaProcessorInterface` should be instance of bridge calss created by the user. Example can be found [here](/docs/intro.md#using-the-transformer-on-webworker)
     * @param vonageMediaProcessor - MediaProcessorInterface.
     */
    constructor(vonageMediaProcessor: MediaProcessorInterface);
    /**
     * @private
     * Sets the media stream track instance to be processed.
     *
     * @param track MediaStreamTrack (audio or video) to be processed.
     *
     * @returns New track to be used.
     */
    setTrack(track: MediaStreamTrack): Promise<MediaStreamTrack>;
    /**
     * @private
     * Stops the media processing being performed.
     */
    destroy(): Promise<void>;
}
export default MediaProcessorConnector;
