import chai, { expect } from "chai";
import sinon from "sinon";
import { copy } from "../src/utils/copy";

describe("copy", () => {
  it("should copy", async () => {
    const from = { a: 0, b: 1, c: 2 };
    const to = {};
    copy(from, to);
    expect(JSON.stringify(from)).to.equal(JSON.stringify(to));
  });

  it("should cleanup object", async () => {
    const from = { a: 0 };
    const to = { b: 0 };
    copy(from, to);
    expect(JSON.stringify(from)).to.equal(JSON.stringify(to));
  });

  it("should override values", async () => {
    const from = { a: 0 };
    const to = { a: 1 };
    copy(from, to);
    expect(JSON.stringify(from)).to.equal(JSON.stringify(to));
  });

  it("should copy object", async () => {
    const from = { a: { b: { c: 0 } } };
    const to = {};
    copy(from, to);
    expect(JSON.stringify(from)).to.equal(JSON.stringify(to));
  });

  it("should copy array", async () => {
    const from = { a: [[[0]]] };
    const to = {};
    copy(from, to);
    expect(JSON.stringify(from)).to.equal(JSON.stringify(to));
  });

  it("should make whole copy", async () => {
    const from = {
      a: [[[0]]],
      b: { a: [1, 2, 3], b: { c: "1" } },
      c: "blablabla",
    };
    const to = {};
    copy(from, to);
    expect(JSON.stringify(from)).to.equal(JSON.stringify(to));
  });
});
