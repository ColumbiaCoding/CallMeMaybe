import { Command, WorkerContext } from "../interfaces";
import { postCommand } from "./post-command";
import { registeredWorkers } from "../register-worker";
import { globals } from "../globals/globals";
import { copy } from "../utils/copy";

/**
 * Handle command of type CommandType.INIT.
 * It will instantiate the class and respond with true if it succeed
 * @internal
 * @param command Requested command
 * @param context WorkerContext
 */
export function handleCommandInit(
  command: Command,
  context: WorkerContext
): void {
  if (!command.args) {
    throw "Missing className while initializing worker";
  }

  const [className, globalsValues] = command.args;
  const constructor = registeredWorkers[className];

  if (constructor) {
    context.instance = new constructor(command.args.slice(1));
  } else {
    throw `unknown worker class ${className}`;
  }

  copy(globalsValues, globals);

  postCommand(command, typeof context.instance !== undefined);
}
