import { Command, WorkerContext } from "../interfaces";
import { postCommand } from "./post-command";

/**
 * Handle command of type CommandType.FORWARD.
 * It will call the requested function to the instance and respond with the result
 * @internal
 * @param command Requested command
 * @param context WorkerContext
 */
export async function handleCommandForward(
  command: Command,
  context: WorkerContext
): Promise<void> {
  const { functionName, args } = command;

  if (!context.instance) {
    throw "instance not initialized";
  }

  if (!functionName) {
    throw "missing function name to call";
  }

  if (!context.instance[functionName]) {
    throw `undefined function [${functionName}] in class ${context.instance.constructor.workerId}`;
  }

  postCommand(command, await context.instance[functionName](...(args ?? [])));
}
