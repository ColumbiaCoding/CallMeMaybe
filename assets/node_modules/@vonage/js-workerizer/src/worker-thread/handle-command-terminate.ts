import { Command, WorkerContext } from "../interfaces";
import { postCommand } from "./post-command";

/**
 * Handle command of type CommandType.TERMINATE.
 * It will call the terminate function to the instance if available and respond with the result
 * @internal
 * @param command Requested command
 * @param context WorkerContext
 */
export async function handleCommandTerminate(
  command: Command,
  context: WorkerContext
): Promise<void> {
  const { args } = command;

  if (!context.instance) {
    throw "instance not initialized";
  }

  let result: any;
  if (context.instance.terminate) {
    result = await context.instance.terminate(...(args ?? []));
  }

  postCommand(command, result);
}
