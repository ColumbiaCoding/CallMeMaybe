import { CommandType } from "../interfaces";
import { postCommand as postCommandMain } from "../main-thread/post-command";
import { postCommand as postCommandWorker } from "../worker-thread/post-command";
import { workerized } from "../main-thread/workerized";
import { isWorker } from "../utils/is-worker";
import { globals } from "./globals";

/**
 * Sync shared global between workers and main thread
 * @internal
 */
export async function globalsSync() {
  if (isWorker()) {
    postCommandWorker({ type: CommandType.GLOBALS_SYNC }, globals);
  } else {
    const promises = [];
    for (const i in workerized) {
      const { worker, resolvers } = workerized[i].workerContext;
      if (worker) {
        promises.push(
          postCommandMain(
            worker,
            CommandType.GLOBALS_SYNC,
            "",
            [globals],
            resolvers
          )
        );
      }
    }
    await Promise.all(promises);
  }
}
