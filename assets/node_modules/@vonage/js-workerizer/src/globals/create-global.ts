import { GlobalSetter, GlobalGetter } from "../interfaces";
import { globals } from "./globals";
import { globalsSync } from "./globals-sync";

/**
 * Create a variable in the shared global context
 * @internal
 * @param name Name of the variable
 * @param defaultValue Value used if the variable is not initialized yed
 * @returns Getter and setter of the variable
 */
export function createGlobal<T>(
  name: string,
  defaultValue?: T
): [GlobalGetter<T>, GlobalSetter<T>] {
  if (!globals[name]) {
    globals[name] = defaultValue;
  }

  return [
    () => globals[name],
    async (value: T) => {
      globals[name] = value;
      await globalsSync();
    },
  ];
}
