import { AnyClass } from "./interfaces";
import { isWorker } from "./utils/is-worker";

export const registeredWorkers: { [key: string]: AnyClass } = {};

/**
 * Register a class as workerizable.
 *
 * @remarks
 * We suggest to call it in the static constructor of the class.
 * Decorator should be provided soon as typescript release them.
 *
 * @remarks
 * ```ts
 * // Example using static constructor
 * class MyWorkerClass {
 *      static {
 *          registerWorker('MyWorkerClass', this);
 *      }
 * }
 * ```
 *
 * @param id id associated to the class
 * @param registrable class to register
 */
export function registerWorker(id: string, registrable: AnyClass): void {
  (registrable as any).workerId = id;
  if (isWorker()) {
    registeredWorkers[(registrable as any).workerId] = registrable;
  }
}
