import { BackgroundOptions } from "../../main";
import { ResolvedWebglQuery } from "../webgl/webgl-profiler";
import { FlickeringOptions } from "../webgl/pipelines/improve-segmentation-mask";
export interface BackgroundFilterConfig {
    maskWidth: number;
    maskHeight: number;
    foregroundWidth: number;
    foregroundHeight: number;
}
export declare class BackgroundFilter {
    private id;
    private improveMaskSegmentation;
    private backgroundResizer;
    private backgroundImage;
    private backgroundVideo;
    private profiler?;
    private activePipeline?;
    canvas: OffscreenCanvas;
    private options?;
    readonly context: WebGL2RenderingContext;
    private virtualBGImage?;
    constructor(id: string, config: BackgroundFilterConfig);
    setBackgroundOptions(options: BackgroundOptions): void;
    setFlickeringOptions(options: FlickeringOptions): void;
    setVideoBGReadable(videoBGReadable: ReadableStream): void;
    setVirtualBGImage(image: ImageBitmap): Promise<void>;
    process(foreground: ImageBitmap, mask?: ImageBitmap): Promise<void>;
    resizeForeground(width: number, height: number): Promise<void>;
    profile(duration: number): Promise<ResolvedWebglQuery[]>;
    private getBlurSize;
}
