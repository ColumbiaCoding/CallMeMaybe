/**
 * @internal
 */
export declare enum WebglQueryAction {
    PUSH = "PUSH",
    POP = "POP"
}
/**
 * @internal
 */
export interface WebglQuery {
    name: string;
    action: WebglQueryAction;
    query: WebGLQuery;
}
/**
 * @internal
 */
export interface ResolvedWebglQuery extends WebglQuery {
    duration: number;
    timestamp: number;
}
/**
 * @internal
 */
export declare class WebglProfiler {
    private context;
    private extension;
    private queries;
    private activeQuery?;
    constructor(context: WebGL2RenderingContext);
    start(): void;
    stop(): void;
    pushContext(name: string): void;
    popContext(name: string): void;
    private createQuery;
    getResolvedQueries(): Promise<ResolvedWebglQuery[]>;
    private resolveQuery;
    private awaitQueryAvailable;
}
