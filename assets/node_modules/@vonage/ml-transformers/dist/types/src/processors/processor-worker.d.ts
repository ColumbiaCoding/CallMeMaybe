import { ErrorData, EventDataMap, PipelineInfoData, VonageMetadata, WarnData } from "@vonage/media-processor";
import { BackgroundOptions, MediaProcessorConfig } from "../../main";
import { FlickeringOptions } from "../webgl/pipelines/improve-segmentation-mask";
export interface MediaProcessorEvent {
    name: keyof EventDataMap;
    data: WarnData | ErrorData | PipelineInfoData;
}
export declare class ProcessorWorker {
    private backgroundTransformer;
    private mediaProcessor;
    private rate;
    private resolveOnMediaProcessor?;
    private eventsQueue;
    init(id: string, config: MediaProcessorConfig): Promise<void>;
    onMediaProcessorEvent(): Promise<MediaProcessorEvent>;
    setTrackExpectedRate(rate: number): Promise<void>;
    transform(readable: ReadableStream<any>, writable: WritableStream<any>): Promise<void>;
    setBackgroundOptions(options: BackgroundOptions): Promise<void>;
    setVideoBGReadable(stream: ReadableStream): void;
    setVirtualBGImage(image: ImageBitmap): Promise<void>;
    terminate(): Promise<void>;
    setFlickeringOptions(options: FlickeringOptions): void;
    setVonageMetadata(metadata: VonageMetadata): void;
    profile(duration: number): Promise<string>;
}
